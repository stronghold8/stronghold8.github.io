{ 
    "title": "Javascript, Node.js, Electron의 관계", 
    "subTitle": "전부 다 Javascript를 쓰니까 헷갈린다.", 
    "content": [
        "Javascript\n웹 브라우저에서 실행되는 프로그래밍 언어\n HTML, CSS와 함께 사용해서 웹 페이지를 동적이고 상호작용 가능하게 만들어 준다.",
        "Node.js\n서버 사이드 Javascript 런타임 환경.\n즉, 브라우저 밖에서도 Javascript를 실행할 수 있게 도와준다. 주로 웹 서버를 만들고 서버와의 데이터 통신을 처리하는 데 사용된다.\n브라우저에서 실행되는 Javascript와는 달리, Node.js는 서버에서 실행되기 때문에 백엔드 개발에 사용된다.\n <세부사항> \n 1.) V8 엔진 \n  JavaScript 코드가 컴퓨터에서 실행되게 만들어주는 엔진 \n 브라우저에서는 V8이 JavaScript를 실행하지만, Node.js에서는 이 V8 엔진이 서버나 데스크톱 환경에서도 JavaScript를 실행할 수 있도록 해준다. \n 2.) Core Libraries (핵심 라이브러리) \n Node.js는 V8 외에도 파일 시스템, HTTP 서버, 네트워킹 같은 작업을 쉽게 처리할 수 있게 해주는 내장 라이브러리들을 제공하고, 이 라이브러리들이 있어야 서버 사이드 프로그래밍이 가능해진다.\n 3.) 실체(실제로 설치한 것은?)\n Node.js를 설치하면, V8 엔진과 Node.js 자체의 라이브러리들이 함께 설치된다. 이때, 설치된 Node.js는 실제로 명령어를 실행할 수 있게 해주는 실행 환경이 된다. 즉, Node.js를 설치하고 node 명령어를 사용해서 JavaScript 파일을 실행할 수 있게 된다.",
        "Electron\n  데스크톱 애플리케이션을 만들 수 있는 프레임워크\n 웹 기술을 사용해서 데스크톱 앱을 만들 수 있게 해준다.\n 메인 프로세스에서는 Node.js를 사용해서 애플리케이션의 백엔드를 처리.\n 렌더러 프로세스에서는 HTML, CSS, JS를 사용해서 UI를 구성 (프론트엔드)."
        
    ]
}