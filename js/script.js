/* typing animation */
var typed = new Typed(".typing",{
    strings:["Programmer", "", "King", "", "Dreamer" , ""],
    typeSpeed:100,
    BackSpeed:60,
    loop:true
})





/* ============================================== Aside ============================================== */
const nav = document.querySelector(".nav"), //문서의 첫 번째 nav클래스 선택 (하나 밖에 없음)
  navList = nav.querySelectorAll("li"),     //nav클래스 내의 모든 li요소 선택 (nav클래스 안에 있는 것들만 있음)
  allSection = document.querySelectorAll(".section"), //문서의 모든 section클래스 (home 'section', about 'section'들을 선택)
  totalSection = allSection.length;

// 메뉴 클릭 이벤트 등록
for (let i = 0; i < navList.length; i++) {  //navList의 크기 내에서 이동.
  const a = navList[i].querySelector("a");  //nav의 각 요소는 해당하는 a태그 하나 선택, 그 태그마다 이벤트 설정
  a.addEventListener("click", function (e) {
    e.preventDefault(); // 기본 동작 방지
    if (this.classList.contains("active"))
      {
        removeContainer();
        return;
      }  //this = a

    // 이전 섹션에 back-section 클래스 추가
    for (let j = 0; j < navList.length; j++) {
      if (navList[j].querySelector("a").classList.contains("active")) {   //액티브인 aside의 a요소를 찾고
        const activeTarget = navList[j].querySelector("a").getAttribute("data-target"); //그 요소의 data-target을 저장. activeTarget = about 이런 식으로.
        updateBackSection(activeTarget); // 이전 섹션에만 back-section 추가
      }
      navList[j].querySelector("a").classList.remove("active");
    }

    // 현재 클릭한 메뉴 활성화
    this.classList.add("active");
    showSection(this); // 새로운 섹션 활성화  this = a

    // 반응형에서 aside 토글 버튼 처리 (옵션)
    if (window.innerWidth < 1200) {
      asideSectionTogglerBtn();
    }
    removeContainer()
  });
}

// back-section 업데이트 함수 (항상 하나만 유지)
function updateBackSection(targetId) {
  // 모든 섹션에서 back-section 제거
  allSection.forEach(section => section.classList.remove("back-section"));

  // 새롭게 지정된 섹션에 back-section 추가
  const section = document.getElementById(targetId);
  if (section) section.classList.add("back-section");
}

// 섹션 표시 함수
function showSection(element) {     //매개변수를 특정 a로 넘김
  const targetId = element.getAttribute("data-target"); // 특정 a의 data-target으로 대상 식별

  // 모든 섹션 비활성화
  allSection.forEach(section => section.classList.remove("active"));

  // 대상 섹션 활성화
  const targetSection = document.getElementById(targetId);
  if (targetSection) targetSection.classList.add("active");

  // URL 해시 업데이트
  history.pushState(null, null, `#${targetId}`);
}

// Nav 업데이트 함수 (선택적으로 사용 가능)
function updateNav(element) {
  const targetId = element.getAttribute("data-target");
  navList.forEach(navItem => {
    const a = navItem.querySelector("a");
    a.classList.toggle(
      "active",
      a.getAttribute("data-target") === targetId
    );
  });
}


/*
        // 버튼 클릭 이벤트 추가
const customButtons = document.querySelectorAll(".custom-button");

customButtons.forEach(button => {
  button.addEventListener("click", function () {
    const targetId = this.getAttribute("data-target"); // 버튼의 data-target 값

    setBackSection();

    // 섹션 활성화
    showSectionById(targetId);

    // Nav 메뉴 업데이트 (옵션)
    updateNavById(targetId);

    // URL 해시 업데이트
    history.pushState(null, null, `#${targetId}`);
  });
});

*/





// 이전 섹션을 back-section으로 설정
function setBackSection() {
  // 모든 섹션에서 기존의 back-section 제거
  allSection.forEach(section => section.classList.remove("back-section"));

  const currentActive = document.querySelector(".section.active");
  console.log("Current Active Section:", currentActive); // 디버깅 메시지
  if (currentActive) {
    currentActive.classList.add("back-section");
    console.log("Back Section added:", currentActive); // 디버깅 메시지
  } else {
    console.warn("No active section found.");
  }
}

// 섹션 활성화 함수 (ID로 직접 활성화)
function showSectionById(targetId) {
  allSection.forEach(section => section.classList.remove("active"));

  const targetSection = document.getElementById(targetId);
  if (targetSection) targetSection.classList.add("active");
}

// Nav 메뉴 업데이트 함수 (ID 기준)
function updateNavById(targetId) {
  navList.forEach(navItem => {
    const a = navItem.querySelector("a");
    a.classList.toggle(
      "active",
      a.getAttribute("data-target") === targetId
    );
  });
}




    const navTogglerBtn = document.querySelector(".nav-toggler"),
        aside = document.querySelector(".aside");
        navTogglerBtn.addEventListener("click", () => 
        {
            asideSectionTogglerBtn();
        })
        function asideSectionTogglerBtn()
        {
            aside.classList.toggle("open");
            navTogglerBtn.classList.toggle("open");
            for(let i = 0; i<totalSection; i++)
            {
                allSection[i].classList.toggle("open");
            }
        }

        window.addEventListener("load", () => {
            const hash = window.location.hash; // 현재 URL의 해시 값 가져오기
            if (hash) {
                const target = document.querySelector(hash);
                if (target) {
                    // 모든 섹션 초기화
                    allSection.forEach(section => section.classList.remove("active"));
                    // 해시 섹션 활성화
                    target.classList.add("active");
        
                    // 네비게이션도 업데이트
                    updateNav(document.querySelector(`a[href="${hash}"]`));
                }
            }
        });



/* ============================================== 개인 로그  ============================================== */

async function loadExperience() {
    try {
      const response = await fetch('json/log.json'); // JSON 파일 경로
      const data = await response.json();
  
      // 기존 타임라인의 shadow-dark 내부에 새 항목 추가
      const experienceTimeline = document.querySelector('.experience .timeline.shadow-dark');
      
      data.experience.forEach(item => {
        const newItem = `
          <div class="timeline-item">
            <div class="circle-dot"></div>
            <h3 class="timeline-date"><i class="fa fa-calendar"></i> ${item.date}</h3>
            <h4 class="timeline-title">${item.title}</h4>
            <p class="timeline-text">${item.text}</p>
          </div>
        `;
        experienceTimeline.innerHTML += newItem; // 새로운 항목 추가
      });
    } catch (error) {
      console.error('JSON 데이터를 로드하는 중 오류 발생:', error);
    }
  }
  
  // 페이지 로드 시 실행
  document.addEventListener('DOMContentLoaded', loadExperience);
  

  // 초기화 함수: 첫 로딩 시 home 활성화
function initializeActiveSection() {
  const defaultSectionId = "home"; // 초기 활성화할 섹션 ID
  const defaultNav = document.querySelector(`a[data-target="${defaultSectionId}"]`);

  // 모든 섹션 초기화
  allSection.forEach(section => {
    section.classList.remove("active", "back-section");
  });

  // 모든 네비게이션 항목 초기화
  navList.forEach(navItem => {
    navItem.querySelector("a").classList.remove("active");
  });

  // home 섹션과 관련 네비게이션 항목 활성화
  if (defaultNav) {
    defaultNav.classList.add("active");
    const defaultSection = document.getElementById(defaultSectionId);
    if (defaultSection) defaultSection.classList.add("active");
  }
}

// 페이지 로드 시 초기화
window.addEventListener("DOMContentLoaded", initializeActiveSection);



/* ============================================== 연혁  ============================================== */

async function loadEducation() {
    try {
      const response = await fetch('json/timeline.json'); // JSON 파일 경로
      const data = await response.json();
  
      // 기존 타임라인의 shadow-dark 내부에 새 항목 추가
      const educationTimeline = document.querySelector('.education .timeline.shadow-dark');
      
      data.education.forEach(item => {
        const newItem = `
          <div class="timeline-item">
            <div class="circle-dot"></div>
            <h3 class="timeline-date"><i class="fa fa-calendar"></i> ${item.date}</h3>
            <h4 class="timeline-title">${item.title}</h4>
            <p class="timeline-text">${item.text}</p>
          </div>
        `;
        educationTimeline.innerHTML += newItem; // 새로운 항목 추가
      });
    } catch (error) {
      console.error('JSON 데이터를 로드하는 중 오류 발생:', error);
    }
  }
  
  // 페이지 로드 시 실행
  document.addEventListener('DOMContentLoaded', loadEducation);



  function glitch(element) {
    let count = 0
    setInterval(() => {
      // element
      const skew = Math.random() * 20 - 10
      // element::before
      const top1 = Math.random() * 100
      const btm1 = Math.random() * 100
      // element::after
      const top2 = Math.random() * 100
      const btm2 = Math.random() * 100

      //element.style.setProperty('--skew', `${skew}deg`)
      element.style.setProperty('--t1', `${top1}%`)
      element.style.setProperty('--b1', `${btm1}%`)
      element.style.setProperty('--t2', `${top2}%`)
      element.style.setProperty('--b2', `${btm2}%`)

      
      
    }, 100)
  }

  const h1 = document.querySelector('.custom-text')
  glitch(h1)


/* ============================================== 컨텐츠 로고 로딩  ============================================== */


const svgCodes = [
  //1 AI 이미지
  `<svg id="Layer_5" enable-background="new 0 0 64 64" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="32.07" x2="32.07" y1="63" y2="1">
  <stop offset="0" stop-color="#9f2fff"/>
  <stop offset="1"  stop-color="#0bb1d3"/>
  </linearGradient>
  <path d="m8.673 45.453c.236 2.592 2.376 4.547 4.98 4.547h5.347v2.279l-6.573 2.191c-3.246 1.082-5.427 4.108-5.427 7.53v1h46.443l
  -.697-1.86c-1.709-4.555-5.95-7.71-10.746-8.098v-4.762c3.756-6.138 9.536-10.865 16.344-13.34l.795-.291-2.312-12.327c-2.316-12.355-13.12-21.322-25.689-21.322-14.413 0-26.138 
  11.725-26.138 26.138v10.583l3.063 1.021zm.411 15.547c.363-2.134 1.87-3.93 3.976-4.632l7.94-2.647v-3.721h2c.092 0 .182-.014.274-.016l1.901 5.701 5.352 2.974c-.481.728-.895 
  1.509-1.218 2.341zm41.43 0h-19.028c1.735-3.623 5.451-6 9.514-6s7.779 2.377 9.514 6zm-9.713-14.515-6.514-5.791c3.856-1.015 6.713-4.523 6.713-8.694 0-1.053-.191-2.06-.525-3h15.57l.818 
  4.36c-6.584 2.575-12.213 7.201-16.062 13.125zm4.634-27.92c.754.754 1.434 1.573 2.048 2.435h-5.077c-1.125-1.065-2.375-1.921-3.701-2.575l1.475-3.56c1.922.919 3.704 2.149 5.255 
  3.7zm-8.584-.89c-1.252-.422-2.545-.683-3.851-.768v-3.858c1.842.095 3.631.45 5.332 1.051zm-5.851-.761c-1.306.086-2.6.337-3.852.759l-1.48-3.573c1.701-.601 3.491-.956 
  5.332-1.051zm-7.18-2.049 1.479 3.571c-1.306.644-2.534 1.487-3.646 2.53l-2.412-3.015c1.387-1.261 2.926-2.295 4.579-3.086zm8.18 4.034c3.537 0 6.837 1.353 9.293 
  3.808l.293.293h13.334l.75 4h-16.192c-1.617-2.41-4.365-4-7.478-4-2.552 0-4.853 1.072-6.493 2.784l-2.604-3.255c2.435-2.337 5.651-3.63 9.097-3.63zm2.816 12.101c-.302-.847-.969-1.514-1.816-1.816v-4.104c3.059.441 5.48 2.861 5.92 5.92zm-2.816 0c.551 0 1 .449 1 1s-.449 1-1 1-1-.449-1-1 .449-1 1-1zm1 3.816c.847-.302 1.514-.969 1.816-1.816h4.104c-.441 3.059-2.861 5.48-5.92 5.92zm-2-9.736v4.104c-.847.302-1.514.969-1.816 1.816h-4.104c.44-3.059 2.861-5.48 5.92-5.92zm-1.816 7.92c.302.847.969 1.514 1.816 1.816v4.104c-3.059-.441-5.48-2.861-5.92-5.92zm1.954-30c11.024 0 20.564 7.475 23.329 18h-4.586c-.857-1.39-1.868-2.686-3.032-3.849-3.966-3.966-9.24-6.151-14.849-6.151-5.497 0-10.664 2.109-14.574 5.9l-7.557-1.162c4.076-7.576 12.08-12.738 21.269-12.738zm-20.138 25v-2h-3.971c.031-.675.096-1.341.182-2h7.789c1.103 0 2 .897 2 2v1c0 2.206-1.794 4-4 4h-6v-3zm-4 5h6c3.309 0 6-2.691 6-6v-1c0-2.206-1.794-4-4-4h-7.444c.33-1.517.801-2.982 1.403-4.379l8.503 1.308 6.799 8.499c-.795 1.342-1.261 2.902-1.261 4.572 0 4.826 3.822 8.766 8.596 8.98l8.404 7.469v4.593c-3.179.258-6.113 1.731-8.228 4.021l-4.946-2.748-1.524-4.573c2.567-.555 4.9-2.011 6.498-4.142l-1.6-1.2c-1.691 2.254-4.382 3.6-7.2 3.6h-9.347c-1.562 0-2.846-1.173-2.987-2.728l-.729-8.014-2.937-.979zm8-5h-2v-2h2z" fill="url(#SVGID_1_)"/>
  </svg>`,

  //2 자료구조, 알고리즘
  `<svg id="Layer_5" enable-background="new 0 0 64 64" viewBox="0 0 64 64" xmlns=
  "http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="32" x2="32" y1="63" y2="1">
  <stop offset="0" stop-color="#9f2fff"/>
  <stop offset="1" stop-color="#0bb1d3"/>
  </linearGradient><path d="m13 7c-3.309 0-6 2.691-6 6s2.691 6 6 6 
  6-2.691 6-6-2.691-6-6-6zm0 10c-2.206 0-4-1.794-4-4s1.794-4 4-4 4 1.794 4 4-1.794 4-4 4zm20-3h-2v-2h2zm2-2h6v2h-6zm-4 
  4h10v2h-10zm-18 33h-8v6h8zm-2 4h-4v-2h4zm4-4h6v2h-6zm0 4h6v2h-6zm-10 4h16v2h-16zm55-22h-16c-1.654 0-3 1.346-3 3v7h-4v-9.142c1.72-.447 
  3-1.999 3-3.858 0-1.858-1.28-3.411-3-3.858v-6.142h5c1.654 0 3-1.346 3-3v-5h4.09c.478 2.833 2.942 5 5.91 5 3.309 0 6-2.691 6-6 0-1.035-.263-2.009-.726-2.86l2.433-2.433-1.414-1.414-2.269 
  2.269c-1.066-.967-2.475-1.562-4.024-1.562-2.967 0-5.431 2.167-5.91 5h-4.09v-5c0-1.654-1.346-3-3-3h-12c-1.654 0-3 1.346-3 3v5h-2v-1.763l-2.625-.718c-.086-.229-.181-.458-.286-.685l1.35-2.366-3.908-3.908-2.366 1.35c-.227-.104-.455-.2-.685-.286l-.717-2.624h-5.526l-.718 2.625c-.229.086-.458.181-.685.286l-2.366-1.35-3.907 
  3.908 1.35 2.366c-.104.227-.2.455-.286.685l-2.625.717v5.526l2.625.718c.086.229.181.458.286.685l-1.35 2.366 3.908 3.908 2.366-1.35c.227.104.455.2.685.286l.717 2.624h1.763v16h-8c-1.654 0-3 1.346-3 3v16c0 1.654 1.346 3 3 3h18c1.654 0 3-1.346 3-3v-16c0-1.654-1.346-3-3-3h-8v-16h1.763l.718-2.625c.229-.086.458-.181.685-.286l2.366 1.35 3.908-3.908-1.35-2.366c.104-.227.2-.455.286-.685l2.624-.717v-1.763h2v5c0 1.654 1.346 3 3 3h5v6.142c-1.72.447-3 2-3 3.858 0 1.859 1.28 3.411 
  3 3.858v11.142h6v7c0 1.654 1.346 3 3 3h16c1.654 0 3-1.346 3-3v-16c0-1.654-1.346-3-3-3zm-5-26c.997 0 1.899.38 2.6.986l-2.6 2.6-1.293-1.293-1.414 1.414 2.707 2.707 3.753-3.753c.15.421.247.867.247 1.339 0 2.206-1.794 4-4 4s-4-1.794-4-4 1.794-4 4-4zm-33 52h-18c-.551 0-1-.448-1-1v-13h20v13c0 .552-.449 1-1 1zm1-17v1h-20v-1c0-.552.449-1 1-1h18c.551 0 1 .448 1 1zm0-29.763-2.193.6-.162.525c-.142.46-.334.922-.572 1.371l-.256.486 1.129 1.979-1.75 1.75-1.979-1.129-.486.256c-.449.237-.91.43-1.371.572l-.525.162-.598 
  2.191h-2.474l-.6-2.193-.525-.162c-.46-.142-.922-.334-1.371-.572l-.486-.256-1.979 1.129-1.75-1.75 1.129-1.979-.256-.486c-.237-.449-.43-.91-.572-1.371l-.162-.525-2.191-.598v-2.474l2.193-.6.162-.525c.142-.46.334-.922.572-1.371l.256-.486-1.129-1.977 1.75-1.75 1.979 1.129.486-.256c.449-.237.91-.43 1.371-.572l.525-.162.598-2.193h2.474l.6 2.193.525.162c.46.142.922.334 1.371.572l.486.256 1.979-1.129 1.75 1.75-1.129 1.979.256.486c.237.449.43.91.572 1.371l.162.525 2.193.6v2.472zm7-8.237h12c.551 0 1 .449 1 1v1h-14v-1c0-.551.449-1 1-1zm-1 13v-9h14v9c0 .551-.449 1-1 1h-12c-.551 0-1-.449-1-1zm5 13c0-1.103.897-2 2-2s2 .897 2 2-.897 2-2 2-2-.897-2-2zm10 5h16c.551 0 1 .448 1 1v1h-18v-1c0-.552.449-1 1-1zm16 18h-16c-.551 0-1-.448-1-1v-13h18v13c0 .552-.449 1-1 1zm-9-12h-6v6h6zm-2 4h-2v-2h2zm4-4h6v2h-6zm0 4h6v2h-6zm-8 4h14v2h-14z" fill="url(#SVGID_1_)"/></svg>`,

  
  //3 일렉트론
`<svg height="278" preserveAspectRatio="xMidYMid" viewBox="0 0 256 278" width="256" xmlns="http://www.w3.org/2000/svg"><defs>
<linearGradient id="gradient1" x1="0%" y1="0%" x2="100%" y2="100%">
    <stop offset="0" style="stop-color:#9f2fff;stop-opacity:1" />
    <stop offset="1" style="stop-color:#0bb1d3;stop-opacity:1" />
  </linearGradient>
  </defs><path fill="url(#gradient1)" d="m90.3171158 59.6452476c-36.263973-6.6048804-64.9364598.3080157-76.363952 20.1010128-8.52745063 14.7699778-6.08994805 34.3525076 5.9114305 55.2850286 1.0214945 1.781667 3.2939055 2.397908 5.075572 1.376414 1.7816665-1.021495 2.3979077-3.293906 1.3764133-5.075573-10.8109791-18.856254-12.9146378-35.7567323-5.9226148-47.8672716 9.4928666-16.4421271 35.068228-22.6083106 68.5905123-16.5027832 2.020486.3679982 3.9567353-.9716083 4.3247331-2.9920944.3679979-2.0204861-.9716083-3.9567351-2.9920944-4.3247332zm53.6304182-33.6842069c-2.959113 5.7228943-8.932507 9.634661-15.819543 9.634661-9.829482 0-17.797851-7.9683692-17.797851-17.7978507 0-9.82948172 7.968369-17.797851 17.797851-17.797851 9.829481 0 17.797851 7.96836928 17.797851 17.797851 0 .2571297-.005453.5129858-.016249.7674591 29.461481 15.237188 49.933599 67.1965819 49.933599 127.2257469 0 24.689028-3.451782 48.381588-9.878724 68.919664-.613339 1.960001-2.699443 3.051685-4.659444 2.438345-1.96-.613338-3.051685-2.699442-2.438345-4.659443 6.196532-19.801775 9.539316-42.746189 9.539316-66.698566 0-56.5238534-18.789039-105.1630897-44.458461-119.8300163zm-127.4790488 167.3575983c.438887-.032407.8822005-.048898 1.3293658-.048898 9.8294816 0 17.7978509 7.968371 17.7978509 17.797851 0 9.829482-7.9683693 17.797851-17.7978509 17.797851-9.82948174 0-17.797851-7.968369-17.797851-17.797851 0-6.691441 3.69273059-12.520399 9.15149469-15.560177-2.6808371-33.264079 32.28213741-77.854126 85.11889551-108.3594424 21.9467168-12.6709427 44.7987308-21.6646102 66.2679188-26.2644774 2.00815-.430255 3.984868.8488819 4.415123 2.8570321.430255 2.0081501-.848882 3.9848681-2.857032 4.4151231-20.690501 4.4330301-42.817353 13.141302-64.1074114 25.4331234-49.7587298 28.7282162-82.6606671 70.1345252-81.5205034 99.7298652zm206.2587848 26.546742c-1.478402-2.594843-2.322973-5.597686-2.322973-8.797789 0-9.82948 7.96837-17.797851 17.797852-17.797851 9.829481 0 17.797851 7.968371 17.797851 17.797851 0 9.829482-7.96837 17.797851-17.797851 17.797851-3.873485 0-7.457959-1.237406-10.37969-3.338485-28.3925 16.703339-82.625386 8.183788-133.6611272-21.281711-21.7252847-12.543099-40.7751369-27.656931-55.4382649-43.770622-1.3822237-1.518962-1.2713758-3.870837.2475857-5.253061 1.5189612-1.382224 3.8708366-1.271376 5.2530607.247585 14.1337336 15.531927 32.5802482 30.167082 53.6562168 42.335296 48.1648129 27.80797 98.8856739 36.083351 124.8473419 22.060934zm-1.165175-63.914509c-1.326898 1.567523-3.673291 1.762588-5.240814.43569s-1.762587-3.67329-.435689-5.240813c21.946123-25.925917 29.339719-51.0854 19.867366-67.4919958-6.875986-11.9095588-22.158793-18.5203333-43.361804-18.7960806-2.053551-.0267064-3.696635-1.7130888-3.669928-3.7666405.026707-2.0535514 1.71309-3.6966337 3.766641-3.669927 23.575303.306599 41.314643 7.9799786 49.705893 22.5140497 11.40396 19.7522405 3.113108 47.9649762-20.631665 76.0157172zm-148.9984132 65.541061c-.6924179-1.93348.3136615-4.062191 2.2471413-4.754609s4.0621906.313662 4.7546081 2.247142c11.4756407 32.044116 29.5910158 51.081199 48.5625598 51.081199 13.644887 0 26.910673-9.774014 37.710497-27.73917 1.058126-1.760157 3.342796-2.329267 5.102954-1.271141 1.760158 1.058125 2.329268 3.342796 1.271142 5.102954-12.017183 19.990193-27.427895 31.344553-44.084593 31.344553-22.83871 0-43.1494346-21.344132-55.5643092-56.010928zm175.9991212-10.424341c0-5.72203-4.638624-10.360654-10.360654-10.360654-5.722032 0-10.360656 4.638624-10.360656 10.360654 0 5.722032 4.638624 10.360654 10.360656 10.360654 5.72203 0 10.360654-4.638622 10.360654-10.360654zm-230.764952 10.360654c5.7220314 0 10.3606544-4.638622 10.3606544-10.360654 0-5.72203-4.638623-10.360654-10.3606544-10.360654-5.7220316 0-10.36065455 4.638624-10.36065455 10.360654 0 5.722032 4.63862295 10.360654 10.36065455 10.360654zm110.33014-193.2697406c5.722031 0 10.360654-4.6386231 10.360654-10.3606544 0-5.7220316-4.638623-10.36065457-10.360654-10.36065457-5.722032 0-10.360654 4.63862297-10.360654 10.36065457 0 5.7220313 4.638622 10.3606544 10.360654 10.3606544zm2.718489 130.2189786c-6.951635 1.502023-13.800391-2.915865-15.305354-9.8675-1.499084-6.951634 2.915866-13.80039 9.8675-15.305353 6.951634-1.502024 13.800391 2.915865 15.305354 9.8675 1.502023 6.951634-2.915866 13.80039-9.8675 15.305353z"/>
  </svg>`,

  //4 마인크래프트
  `<?xml version="1.0" encoding="UTF-8"?>  
  <svg id="Layer_2" data-name="Layer 2" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 526.86 522.18">
  <defs>
    <linearGradient id="gradient1" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset=0 style="stop-color:#9f2fff;stop-opacity:1" />
      <stop offset=1 style="stop-color:#0bb1d3;stop-opacity:1" />
    </linearGradient>
    <style>
      .cls-1 {
        stroke-width: 0px;
      }
    </style>
  </defs>
  <g id="katman_1" data-name="katman 1">
    <g id="Layer_2-2" data-name="Layer 2">
      <g id="Layer_1-2" data-name="Layer 1-2" >
        <path class="cls-1" fill="url(#gradient1)" d="m396.77,195.12c1.61,0,56.45.27,56.34.27,5.97,0,3.67,4.83,4.6-60.69,0-4.51-.4-5.02-5.01-5.05-65.4-.31-60.12,1.21-60.12-3.94V4.89c0-6.04,11.64-4.2-130.39-4.2,0-.8-126.22-.58-126.04-.58-7.37,0-4.83-8.66-4.33,126.3,0,5.65,3.86,3.72-62.38,3.9-1.18,0-1.95.16-2.48-.64-1.51-2.33-.76-12.88-.92-59.3,0-7,6.95-4.83-61.78-4.83-4.96,0-3.36-1.18-3.82,59.56-.05,5.1.24,5.36,5.31,5.36h55.83c.97,0,1.74-.21,2.35-.14,3.59.42,2,10.46,1.77,127.17,0,4.3,1.95,3.22,16.19,3.22,53.27,0,49.11-1.42,49.21,3.78,0,.8.34,116.11.34,121.54,0,4.14-.63,4.65-4.62,4.65-64.54,0-61.36-2.04-61.17,4.28.31,7.92-.1,24.02-.13,52.88,0,9.76-7.73,7.65,59.56,7.44,6.31,0,4.43,1.9,4.46,14.49.26,59.35-1.61,52.04,6.13,52.04,205.02.1,191.56,1.82,191.56-2.98,0-9.4.64-6.89.47-59.29,0-4.83-2.22-3.43,57.95-3.35,4.6,0,4.54-3.73,3.96,61.28,0,5.31-1.38,3.54,61.49,3.65,4.31,0,2.99,2.03,3.59-61.17,0-4.73-.37-5.1-5.18-5.14h-52.61c-5.86,0-3.83,3.61-3.98-60.03,0-5.22-.14-2.77,60.54-3.88,3.69,0,3.75-.19,3.75-3.83,0-66.23,1.74-61.35-4.01-61.33-67.46.19-60.56,1.61-60.56-4.35,0-136.68-2.04-126.17,4.1-126.29ZM59.85,84.85c-27.64-.69-23.29-.27-29.25-3.49-18.17-9.95-23.36-12.07-15.86-12.07,51.4.53,47.47-1.92,47.5,4.22.03,9.13.66,11.41-2.4,11.35Zm333.77,397.87h32.65l25.19,34.08h-57.84v-34.08ZM388.82,3.28c-2.69,7.97-6.55,14.62-13.23,30.59-4.46,10.66-7.55.29-220.2,4.83-5.09.1-4.09-.52-17.71-30.91-2.09-4.7-27.33-3.19,251.14-4.51Zm-239.69,262.52c0-2.78-1.08-4.04-3.65-5.02-8.21-3.22-7.28-1.74-5.28-9.79,40.24-163.15,35.95-151.83,40.76-150.58,223.59,57.5,203.91,47.75,201.36,57.87-55.05,218.46-47.26,199.95-53.91,198.27-194.09-48.79-179.18-41.44-179.09-49.39.26-21.51-.53-21.22-.19-41.37Zm-73.31-129.73c-2.88-1.84-2.16-1.75-1.75-2.4,59.45,0,58.05-1.61,62.3,3.53,9.66,11.57,12.35,10.95,6.02,11.03-55.54.56-42.34,3.49-66.56-12.15Zm22.67,259.4c32.55,0,32.87.87,35.99-3.22,12.07-16.1,13.91-15.63,14.02-21.51.26-16.45.9-51.13.9-52.56,4.72,1.14,161.51,42.32,175.7,45.97,5.54,1.42,2.62-1.09-29.51,109.13-1.18,4.01-3.4,3.22-13.84,3.22-144.88,0-132.93,2.43-132.97-4.04-.42-51.61.87-46.22-4.01-46.22-52.51,0-48.45,1.37-48.53-3.57-.43-27.62-1.37-27.2,2.24-27.2Zm32.87,53.43c-1.9,2.59-.14,2.06-56.23,1.8-.39-.09-.77-.24-1.13-.42,16.6-17.42,21.18-20.28,30.22-20.28.16,0,33.43,0,39.49.5-2.21,4.2-10.24,15.47-12.35,18.4Zm189.68,67.71c-200.54,0-188.87,2.69-186.49-2.66,14.07-31.42,12.88-31.28,17.19-31.28,176.14,0,163.05-2.35,164.85,4.35,8.5,31.89,8.77,29.59,4.44,29.59Zm62.36-65.81c-57.73.11-54.73,1.5-56.5-3.12-3.22-8.6-4.62-10.79-7.78-19.56,6.97-.5,12.27,0,47.7-.1,5.51,0,5.28,1.46,18.51,20.56.34.5.6,1.05,1.13,1.96-1.22.11-2.14.26-3.06.26Zm46.43-75.84c22.31,12.88,19.99,12.09,19.86,12.88-6.79.56,4.43,0-55.39.11-4.83,0-5.78-1.72-16.1-11.38-.53-.52-.98-1.14-1.8-2.09,3.04-.85,50.51-1.21,53.43.48Zm-52.54-227.14c1.21-1.48,13.26-15.05,18.98-15.02,2.74,0,49.9.37,53.12,1.21-4.83,3.73-15.07,10.51-18.66,12.88s-51.17,1.27-53.44.93Z"/>
        <path class="cls-1" fill="url(#gradient1)" d="m517.41,262.21c-62.3,0-60.58-1.72-60.49,4.01.9,63.46-.68,59.37,4.17,59.4,60.77.42,59.79,2.08,59.72-2.98-.71-61.98,2.53-60.43-3.4-60.43Zm-6.44,59.56c-3.38.39-44.57.19-44.46.19-4.83,0-5.12-.26-5.12-5.05s0-4.83,4.65-4.83c6.44,0,18.35-2.38,39.23,6.62,6.36,2.91,5.97,1.53,5.67,3.14l.03-.06Z"/>
        <path class="cls-1" fill="url(#gradient1)" d="m62.35,325.57H4.39c-6.26,0-3.83-8.16-4.33,61.8,0,5.22-2.56,3.36,62.17,3.33,3.3,0,3.75-.47,3.77-3.67.24-66.85,1.87-61.46-3.65-61.46Zm-3.57,61.35c-52.72,0-51.51.53-48.87-1.5,24.15-17.71,23.42-17.71,26.88-17.71,29.86-.58,25.08-3.4,24.94,16.1-.02,2,.55,3.11-2.95,3.11Z"/>
        <path class="cls-1" fill="url(#gradient1)" d="m189.19,299.78c21.67,5.1,22.2,6.21,23.07,2.21,5.23-24.47,4.49-24.5,7.53-23.65,43.85,12.15,45.91,9.21,44.38,14.68-6.29,22.44-6.18,23.37-3.91,24.07,20.14,6.13,21.09,6.44,21.78,3.12.5-2.37,18.56-74.37,18.54-74.24,1.03-4.2.69-3.83-19.69-8.05-2.95-.61-2.08-2.61-1.43-5.94,4.49-22.67,5.07-20.62-.1-21.88-21.15-5.15-42.85-10.72-43.99-10.74-6.44,22.54-3.22,25.64-9,24.15-18.91-5.05-18.9-5.97-19.96-1.75-20.48,81.2-20.81,77.17-17.22,78.02Z"/>
        <rect class="cls-1" fill="url(#gradient1)" x="287.61" y="166.33" width="51.46" height="48.63" transform="translate(55.64 451.64) rotate(-76.68)"/>
        <rect class="cls-1" fill="url(#gradient1)" x="478.23" y="187.68" width="48.63" height="51.46"/>
        <rect class="cls-1" fill="url(#gradient1)" x=".43" y="187.68" width="48.63" height="51.46"/>
        <rect class="cls-1" fill="url(#gradient1)" x="192.61" y="143.84" width="51.46" height="48.63" transform="translate(4.4 341.88) rotate(-76.68)"/ >
      </g>
    </g>
  </g>
</svg>`,

//5 JAVA
`<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 502.632 502.632" style="enable-background:new 0 0 502.632 502.632;" xml:space="preserve">
<defs>
  <linearGradient id="gradient1" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset=0 style="stop-color:#9f2fff;stop-opacity:1" />
      <stop offset=1 style="stop-color:#0bb1d3;stop-opacity:1" />
    </linearGradient>
</defs>
<g>
  <path style="fill:url(#gradient1);" d="M240.864,269.894c0,0-28.02-53.992-26.985-93.445c0.755-28.193,64.324-56.062,89.281-96.529 C328.074,39.431,300.054,0,300.054,0s6.234,29.077-10.376,59.147c-16.609,30.113-77.914,47.779-101.749,99.679 S240.864,269.894,240.864,269.894z"/>
  <path style="fill:url(#gradient1);" d="M345.741,105.869c0,0-95.494,36.347-95.494,77.849c0,41.545,25.928,55.027,30.113,68.509 c4.142,13.525-7.269,36.347-7.269,36.347s37.361-25.95,31.105-56.062c-6.234-30.113-35.29-39.475-18.659-69.544 C296.646,142.799,345.741,105.869,345.741,105.869z"/>
  <path style="fill:url(#gradient1);" d="M230.51,324.748c88.246-3.149,120.43-30.997,120.43-30.997 c-57.076,15.553-208.654,14.539-209.711,3.128c-1.014-11.411,46.701-20.773,46.701-20.773s-74.721,0-80.955,18.68 C100.74,313.467,142.328,327.833,230.51,324.748z"/>
  <path style="fill:url(#gradient1);" d="M358.187,368.494c0,0,86.369-18.421,77.827-65.338c-10.354-57.119-70.58-24.936-70.58-24.936 s42.602,0,46.722,25.928C416.32,330.098,358.187,368.494,358.187,368.494z"/>
  <path style="fill:url(#gradient1);" d="M315.628,343.601c0,0-21.765,5.716-54.013,9.34c-43.228,4.853-95.494,1.014-99.657-6.256 c-4.098-7.269,7.269-11.411,7.269-11.411c-51.921,12.468-23.512,34.233,37.339,38.418c52.158,3.559,129.791-15.574,129.791-15.574 L315.628,343.601z"/>
  <path style="fill:url(#gradient1);" d="M181.738,388.943c0,0-23.555,0.669-24.936,13.137c-1.359,12.382,14.496,23.512,72.65,26.964 c58.133,3.451,98.988-15.898,98.988-15.898l-26.295-15.962c0,0-16.631,3.494-42.236,6.946 c-25.626,3.473-78.173-2.783-80.243-7.593C177.553,391.682,181.738,388.943,181.738,388.943z"/>
  <path style="fill:url(#gradient1);" d="M407.994,445.005c8.995-9.707-2.783-17.321-2.783-17.321s4.142,4.853-1.337,10.376 c-5.544,5.522-56.084,19.349-137.061,23.512c-80.955,4.163-168.856-7.615-171.639-17.99 c-2.696-10.376,45.018-18.659,45.018-18.659c-5.522,0.69-71.96,2.071-74.074,20.082c-2.071,17.968,29.056,32.507,153.67,32.507 C344.339,477.491,399.042,454.647,407.994,445.005z"/>
  <path style="fill:url(#gradient1);" d="M359.568,485.817c-54.682,11.044-220.734,4.077-220.734,4.077s107.919,25.626,231.109,4.185 c58.888-10.268,62.318-38.763,62.318-38.763S414.25,474.708,359.568,485.817z"/>
  </g>
  </svg>`,

  //6 Zoro
  `<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN"
 "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<svg version="1.0" xmlns="http://www.w3.org/2000/svg"
 width="300.000000pt" height="329.000000pt" viewBox="0 0 300.000000 329.000000"
 preserveAspectRatio="xMidYMid meet">
<metadata>
Created by potrace 1.10, written by Peter Selinger 2001-2011
</metadata>
<defs>
  <linearGradient id="gradient1" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset=0 style="stop-color:#9f2fff;stop-opacity:1"/>
      <stop offset=1 style="stop-color:#0bb1d3;stop-opacity:1"/>
    </linearGradient>
</defs>
<g fill="url(#gradient1)" transform="translate(0.000000,329.000000) scale(0.050000,-0.050000)"
fill="#000000" stroke="none">
<path d="M3424 6479 c-94 -38 -224 -142 -286 -229 -81 -112 -88 -112 -117 5
-59 236 -189 186 -214 -82 l-13 -133 -83 0 c-45 0 -115 -17 -155 -37 -65 -33
-77 -34 -122 -7 -170 104 -164 -129 9 -325 45 -51 79 -96 74 -99 -4 -4 -56
-32 -117 -62 -241 -121 -520 -359 -520 -443 0 -40 -10 -47 -67 -47 -66 0 -115
-36 -138 -102 -16 -44 -101 -58 -363 -58 -255 -1 -256 -1 -311 -121 -51 -113
-51 -180 -1 -279 57 -111 53 -127 -29 -112 -172 33 -231 -47 -231 -314 0 -205
-27 -248 -244 -387 l-136 -87 0 -126 c0 -157 3 -161 260 -329 251 -165 243
-156 317 -356 175 -475 203 -615 222 -1085 22 -579 -6 -717 -203 -998 -36 -52
-71 -102 -78 -111 -7 -10 -113 -43 -235 -74 -141 -36 -248 -75 -288 -107 -201
-155 -346 -291 -351 -330 -10 -65 4 -58 204 102 241 194 255 202 448 253 195
51 280 45 144 -10 -251 -103 -678 -366 -623 -385 13 -4 107 46 208 112 417
269 1059 477 2295 743 204 43 537 116 740 161 207 46 423 83 490 83 113 0 117
1 70 28 -70 39 -121 36 -392 -20 -329 -68 -991 -211 -1030 -222 -25 -8 -36 8
-45 66 -12 79 -61 164 -81 143 -7 -6 1 -55 17 -109 36 -119 56 -104 -214 -172
-124 -32 -384 -103 -577 -158 -194 -54 -359 -99 -366 -99 -38 0 45 92 173 192
195 153 318 272 441 428 117 148 131 160 166 147 89 -35 493 72 928 244 320
126 571 201 737 220 110 13 118 17 98 50 -37 59 -215 126 -215 81 0 -8 -16
-15 -35 -16 -51 -4 -92 -15 -120 -33 -15 -9 -25 -5 -25 11 0 16 -6 18 -15 6
-21 -29 -112 -77 -96 -51 21 33 -7 25 -75 -23 -34 -24 -54 -31 -44 -15 14 23
12 24 -11 6 -16 -13 -36 -24 -44 -25 -57 -7 -83 -13 -125 -32 -22 -9 -45 -25
-52 -35 -6 -9 -31 -18 -54 -20 -24 -2 -47 -15 -53 -29 -5 -14 -20 -26 -32 -26
-12 0 -16 9 -9 20 19 31 -9 24 -44 -11 -23 -23 -37 -25 -58 -7 -22 18 -28 16
-28 -11 0 -18 -8 -28 -19 -22 -10 6 -24 2 -32 -10 -7 -12 -27 -16 -44 -10 -16
6 -42 2 -57 -10 -14 -13 -37 -16 -50 -8 -16 10 -19 7 -8 -11 12 -20 5 -23 -27
-15 -24 6 -49 2 -56 -10 -8 -13 -3 -16 15 -7 15 8 11 1 -9 -15 -20 -17 -50
-25 -66 -19 -16 6 -44 -3 -63 -19 -35 -31 -192 -115 -215 -115 -7 0 33 84 88
186 94 175 183 380 183 423 0 41 -42 -27 -129 -205 -158 -323 -311 -508 -311
-375 0 14 -36 50 -80 79 -44 29 -80 47 -80 40 0 -7 -12 -3 -27 10 -15 12 -51
24 -80 26 -29 3 -53 12 -53 20 0 36 -194 16 -230 -24 -28 -31 -30 -41 -8 -49
289 -98 472 -151 528 -151 39 0 70 -9 70 -19 0 -38 -269 -325 -459 -489 -107
-93 -206 -196 -220 -228 -20 -50 -50 -69 -171 -112 -208 -74 -209 -73 -88 88
232 308 267 458 250 1045 -14 494 -58 711 -232 1161 -33 86 -60 161 -60 166 0
6 56 -30 125 -79 527 -374 1104 -450 1562 -207 128 67 171 61 195 -28 l12 -48
16 56 c8 31 25 52 37 47 24 -9 25 -21 2 -80 -12 -29 -7 -35 23 -30 23 5 42 30
50 67 l12 60 15 -54 c8 -29 10 -61 5 -70 -5 -9 2 -27 17 -41 26 -24 56 19 47
68 -8 44 5 51 30 16 20 -27 23 -49 9 -75 -24 -44 -6 -71 25 -40 14 14 47 15
95 4 203 -47 299 -10 395 154 29 49 71 102 95 118 23 17 36 30 28 30 -7 0 13
56 46 125 94 199 72 272 -86 290 -86 9 -103 21 -217 153 -185 214 -499 553
-763 823 -266 272 -256 256 -174 289 212 88 16 460 -243 460 -60 0 -121 11
-134 24 -19 19 -24 15 -24 -15 0 -61 -126 -138 -180 -109 -165 88 160 453 556
624 108 46 272 121 407 186 l94 45 11 -43 c6 -24 3 -110 -6 -193 -9 -82 -14
-152 -11 -156 16 -19 57 31 92 110 47 106 50 106 76 12 50 -178 100 -156 101
45 l2 120 70 -80 c187 -213 472 -664 466 -738 0 -12 -137 -89 -302 -170 l-301
-148 13 -197 c6 -108 18 -287 25 -397 7 -114 21 -200 32 -200 13 0 17 58 10
161 l-11 162 89 -156 c97 -171 120 -201 139 -182 12 13 -133 296 -182 355 -14
17 -31 118 -38 225 l-13 194 286 143 c157 78 296 151 308 161 29 23 -38 184
-147 354 -63 99 -126 224 -127 252 0 6 -22 34 -50 64 -27 29 -45 58 -39 63 9
10 -42 45 -110 76 -16 8 -55 37 -85 65 l-55 50 0 -72 c0 -139 -25 -151 -59
-28 -39 142 -63 145 -93 13 -34 -152 -48 -144 -48 27 0 186 -2 187 -238 73
-91 -44 -177 -80 -191 -80 -33 0 -178 156 -220 238 -38 74 -42 74 92 14 123
-56 317 -88 317 -54 0 29 -112 97 -187 114 -89 19 -25 47 109 48 81 0 138 -14
205 -49 76 -41 93 -44 93 -19 0 17 -36 46 -81 64 -95 40 -111 84 -87 230 l18
104 70 -139 c81 -161 100 -174 137 -92 51 117 319 371 354 337 5 -5 -22 -80
-60 -167 -37 -87 -65 -161 -62 -165 9 -9 420 209 499 263 l58 40 -12 -64 c-8
-36 -35 -109 -61 -164 -54 -114 -52 -122 33 -97 61 17 270 -5 317 -34 13 -8
-3 -24 -40 -40 -79 -33 -85 -73 -8 -49 126 40 177 39 254 -5 120 -68 113 -91
-32 -98 l-126 -6 135 -78 c75 -44 193 -141 269 -220 l135 -142 -85 -6 c-95 -7
-112 -36 -32 -56 32 -9 103 3 185 29 144 48 182 53 182 25 0 -39 -125 -122
-183 -122 -33 0 -55 -8 -49 -17 15 -24 233 -50 417 -50 152 0 155 -1 128 -42
-15 -22 -40 -62 -55 -87 -25 -42 -38 -45 -128 -32 -90 12 -97 10 -72 -20 15
-17 54 -32 86 -32 33 0 111 -15 173 -33 l113 -33 -80 -37 c-44 -20 -91 -36
-105 -36 -38 -1 -32 -16 63 -138 148 -191 290 -539 152 -373 -14 17 -30 26
-36 20 -6 -5 11 -34 38 -62 l48 -53 -90 15 -90 14 59 -62 c60 -63 272 -182
325 -182 63 0 -1 -39 -84 -51 -50 -7 -90 -17 -90 -21 0 -3 17 -50 37 -102 20
-53 43 -127 50 -165 l14 -70 -80 78 c-60 58 -82 71 -91 49 -17 -45 22 -285 58
-354 55 -107 20 -118 -70 -22 l-58 62 0 -117 c1 -72 16 -150 39 -202 l39 -85
-45 0 c-24 0 -65 14 -90 32 -60 42 -65 34 -42 -68 31 -136 -4 -223 -61 -154
-38 46 -55 20 -70 -110 -15 -130 -20 -136 -72 -88 -32 29 -36 24 -57 -75 -32
-156 -45 -168 -101 -93 l-47 64 -41 -128 c-47 -143 -81 -171 -99 -81 -18 90
-112 39 -219 -118 l-34 -50 -32 46 c-37 53 -60 40 -151 -85 -43 -58 -57 -68
-58 -40 0 32 -7 30 -46 -17 -36 -44 -50 -50 -70 -30 -21 20 -36 12 -80 -41
-65 -80 -108 -53 -132 86 -35 199 -190 433 -240 364 -23 -31 -28 -25 -49 54
-12 49 -31 95 -42 102 -27 16 -25 4 16 -159 40 -153 66 -180 95 -97 l20 55 55
-95 c90 -153 119 -253 116 -397 -5 -183 31 -456 82 -638 l43 -150 142 -55 c77
-29 152 -61 165 -70 38 -24 145 -564 123 -620 -18 -50 -15 -51 -148 39 -102
69 -321 143 -577 195 l-197 40 -223 -40 c-427 -77 -1062 -256 -1652 -466
l-310 -110 312 -1 c171 -1 318 6 326 14 9 8 21 15 29 16 7 0 33 12 58 25 25
14 45 18 45 10 0 -9 7 -7 15 5 19 26 163 69 234 69 30 0 48 9 41 20 -7 11 8
21 34 22 84 3 165 20 190 41 14 12 60 22 103 24 44 2 75 9 71 16 -10 17 67 36
147 37 36 0 65 9 65 20 0 29 55 25 67 -5 7 -17 10 -15 11 6 1 18 24 32 57 35
30 2 85 14 121 26 37 12 72 17 78 10 7 -6 23 -3 36 8 57 48 528 -20 570 -82 6
-9 33 -19 60 -23 28 -4 79 -22 114 -41 35 -19 78 -34 96 -34 17 0 36 -13 42
-28 6 -15 26 -23 46 -18 52 13 89 -45 101 -159 0 -8 37 -15 81 -15 90 0 87
-14 37 186 -13 53 -12 96 5 142 26 72 -62 609 -110 670 -12 15 -91 59 -176 98
-153 68 -155 70 -184 172 -70 240 -95 552 -44 552 15 0 38 14 52 30 14 17 50
30 81 30 31 0 62 9 69 20 7 11 30 20 51 20 24 0 53 29 79 80 41 80 67 97 90
60 32 -52 107 -19 159 70 53 90 91 116 91 61 0 -97 132 -62 191 50 25 49 39
57 80 47 62 -16 102 17 120 95 9 43 30 66 71 81 37 13 62 38 68 68 6 26 15 71
20 98 8 36 24 50 56 50 69 0 94 38 94 146 0 96 1 97 56 85 104 -23 141 47 86
164 -57 121 -55 132 21 134 100 2 114 49 51 178 -67 137 -68 133 16 119 98
-16 118 147 41 336 -10 25 10 38 93 60 148 40 163 177 19 178 -114 1 -226 72
-201 127 41 90 -48 343 -172 489 -62 73 -55 88 54 123 128 41 119 161 -11 161
-116 1 -126 25 -57 131 104 157 68 187 -176 145 -164 -28 -206 -10 -152 67 81
115 20 172 -149 138 -121 -23 -121 -23 -165 33 -54 69 -104 119 -193 193 -63
52 -66 60 -35 82 127 93 -213 334 -515 365 l-105 11 37 98 c78 205 12 303
-126 187 -78 -65 -316 -198 -330 -183 -7 6 8 43 32 82 79 128 20 206 -115 150z
m-1068 -1605 c26 -30 10 -60 -50 -91 -64 -34 -145 -28 -160 10 -28 74 157 145
210 81z m-467 -81 c35 -25 30 -33 -66 -126 -293 -283 36 -549 432 -350 l164
83 157 -165 c86 -91 279 -300 428 -465 149 -165 322 -349 384 -409 137 -134
137 -131 5 -157 -67 -14 -176 -63 -291 -133 -101 -61 -185 -111 -188 -111 -2
0 -6 54 -9 120 -3 71 3 120 15 120 11 0 20 -40 20 -90 0 -49 9 -90 20 -90 11
0 20 52 20 117 0 103 7 122 58 168 l57 51 13 -78 c19 -117 59 -99 48 22 -8 79
-3 106 27 133 21 18 33 37 28 42 -13 13 -111 -58 -348 -252 l-208 -169 10 -97
c5 -53 1 -97 -8 -97 -9 0 -17 29 -17 65 -1 51 -5 59 -22 35 -16 -23 -24 -24
-31 -5 -17 42 -47 6 -47 -56 0 -64 31 -80 46 -24 5 19 10 6 12 -30 2 -59 42
-98 42 -41 0 18 5 19 24 0 31 -31 436 185 571 304 113 99 565 107 565 10 0
-89 -122 -330 -225 -446 l-106 -117 -138 3 c-155 3 -167 8 -131 52 21 26 17
30 -28 30 -33 0 -52 11 -52 30 0 19 19 30 51 30 32 0 46 8 38 22 -10 16 -3 16
27 0 144 -77 353 108 251 221 -18 21 -52 36 -75 36 -42 -2 -42 -2 2 -23 70
-34 70 -72 -2 -151 l-67 -73 -164 74 c-172 77 -201 86 -201 56 0 -10 25 -24
55 -32 36 -10 45 -18 25 -25 -16 -5 -45 -28 -62 -51 -20 -24 -45 -35 -65 -28
-45 17 -19 74 33 74 33 0 37 5 17 25 -34 34 -93 -7 -93 -66 -1 -61 -34 -69
-79 -20 -35 39 -36 39 -132 -9 -155 -79 -373 -131 -589 -140 l-200 -9 208 30
c301 44 402 91 402 190 0 106 -36 119 -44 17 -6 -80 -10 -85 -96 -111 -477
-144 -922 -19 -1689 477 -98 63 -185 118 -192 121 -8 3 -21 52 -28 109 l-14
103 76 40 c107 54 242 165 288 235 l39 58 0 -67 c0 -50 -10 -69 -40 -77 -69
-18 16 -126 98 -126 19 0 49 -27 68 -59 53 -89 152 -181 196 -181 21 0 38 -7
38 -16 0 -53 149 -187 196 -178 42 8 69 -10 151 -99 215 -236 485 -285 681
-124 82 68 93 117 27 117 -219 3 -463 276 -615 690 -130 354 -177 406 -429
479 -131 38 -149 48 -122 70 39 33 40 102 1 194 -38 92 -38 173 1 248 l30 59
265 2 c145 2 291 10 324 18 94 24 139 22 179 -7z m226 -184 c169 -70 194 -161
63 -220 -215 -97 -387 1 -305 173 43 89 110 102 242 47z m-926 -435 c237 -101
293 -161 379 -406 137 -387 308 -620 534 -727 l123 -59 -68 -41 c-207 -126
-556 24 -707 305 -49 93 -64 94 -54 4 12 -103 -29 -76 -136 90 -95 147 -120
167 -120 98 0 -35 -5 -39 -29 -19 -85 71 -269 448 -229 472 35 22 18 52 -22
39 -37 -12 -40 -4 -40 107 0 255 49 273 369 137z m1671 -1095 c0 -34 9 -78 19
-97 17 -31 -120 -162 -170 -162 -34 0 -5 220 31 240 36 19 40 15 40 -48 0 -38
8 -75 18 -81 29 -17 43 46 29 131 -8 52 -5 78 10 78 13 0 23 -28 23 -61z m283
-342 c-24 -9 -43 -25 -43 -36 0 -12 -18 -21 -40 -21 -27 0 -40 13 -40 42 0 35
9 41 50 33 28 -5 50 -2 50 7 0 9 15 11 33 4 29 -11 27 -15 -10 -29z"/>
<path d="M1200 4402 c0 -9 13 -28 28 -41 32 -26 64 4 42 39 -15 25 -70 27 -70
2z"/>
<path d="M3280 3385 c0 -8 19 -46 43 -85 51 -83 74 -50 28 39 -29 55 -71 83
-71 46z"/>
<path d="M3425 3107 c-53 -12 -125 -98 -125 -150 0 -31 -16 -37 -100 -37 -55
0 -100 -9 -100 -20 0 -11 20 -20 45 -20 25 0 78 -6 118 -13 74 -12 74 -12 91
75 21 108 98 150 164 90 39 -35 94 -28 71 9 -6 11 2 19 19 19 25 0 27 -10 12
-50 -12 -31 -12 -80 -2 -125 l18 -75 2 74 c1 40 11 98 23 128 31 83 -81 128
-236 95z"/>
<path d="M3451 5988 c-74 -27 -200 -125 -183 -142 4 -5 51 21 104 57 78 53
121 67 222 74 160 10 158 -12 -5 -85 -144 -64 -154 -93 -42 -116 92 -19 184
-66 263 -132 58 -49 58 -50 10 -37 -27 7 -90 18 -140 23 -90 10 -90 10 30 -29
66 -22 144 -53 173 -70 65 -38 77 -39 77 -5 0 56 -145 194 -263 251 -132 63
-131 67 29 123 128 45 138 71 40 99 -103 28 -219 24 -315 -11z"/>
<path d="M2972 5500 c-7 -55 -19 -114 -25 -130 -20 -52 25 -33 50 21 27 59 31
209 6 209 -10 0 -24 -45 -31 -100z"/>
<path d="M4010 5280 c-33 -8 -117 -16 -186 -18 -143 -2 -151 -30 -14 -49 103
-14 267 15 323 58 44 33 -12 37 -123 9z"/>
<path d="M4160 5098 c-82 -60 -92 -62 -218 -49 -106 10 -127 8 -107 -12 64
-64 275 -46 358 29 100 92 78 112 -33 32z"/>
<path d="M2250 5125 c-51 -12 -150 -82 -150 -105 0 -10 38 -1 85 21 47 21 119
38 160 39 83 0 101 28 30 47 -49 14 -65 13 -125 -2z"/>
<path d="M2793 5041 c-145 -81 -241 -160 -163 -133 48 17 221 120 290 173 81
62 20 43 -127 -40z"/>
<path d="M3510 4894 c-392 -157 -388 -149 -329 -680 36 -329 72 -464 49 -184
-27 314 -19 588 19 648 36 58 199 142 278 142 78 0 213 77 213 121 0 32 -63
19 -230 -47z"/>
<path d="M4020 4885 c0 -9 47 -32 105 -53 58 -20 119 -42 135 -48 51 -19 -18
54 -83 87 -59 31 -157 39 -157 14z"/>
<path d="M4127 4734 c21 -13 75 -48 120 -78 86 -56 106 -58 86 -7 -17 44 -134
111 -193 110 -46 -1 -47 -3 -13 -25z"/>
<path d="M2680 4726 c0 -11 36 -30 79 -43 103 -31 133 -63 148 -161 17 -102
53 -127 53 -36 0 125 -22 188 -73 212 -71 32 -207 51 -207 28z"/>
<path d="M3664 4538 c4 -15 53 -58 107 -96 l99 -67 -120 10 c-66 6 -136 18
-155 25 -60 24 -39 -17 65 -128 99 -105 136 -119 60 -22 -53 67 -50 75 20 64
93 -13 280 15 280 43 0 14 -43 36 -95 50 -52 14 -121 46 -155 71 -95 71 -116
81 -106 50z"/>
<path d="M4900 4361 c0 -42 50 -78 75 -53 17 17 -19 77 -51 87 -14 5 -24 -10
-24 -34z"/>
<path d="M3995 4229 c-16 -16 25 -109 48 -109 9 0 17 -11 18 -25 1 -62 214
-215 299 -215 17 0 42 -18 55 -40 27 -42 133 -53 263 -27 84 16 79 47 -9 47
-132 0 -586 177 -560 218 6 10 44 24 86 32 120 22 119 35 -6 71 -66 18 -133
39 -150 47 -17 7 -37 8 -44 1z"/>
<path d="M3520 4159 c0 -34 95 -210 128 -238 47 -38 40 2 -22 128 -49 100
-106 159 -106 110z"/>
<path d="M4529 4098 c-18 -28 34 -63 58 -39 19 19 1 61 -27 61 -10 0 -24 -10
-31 -22z"/>
<path d="M4960 4049 c0 -32 45 -89 71 -89 35 0 38 43 5 76 -25 25 -76 33 -76
13z"/>
<path d="M4543 4007 c4 -20 23 -40 42 -43 49 -10 44 30 -7 57 -36 19 -41 17
-35 -14z"/>
<path d="M4059 3811 c34 -40 174 -105 277 -128 133 -30 94 10 -85 88 -174 76
-232 88 -192 40z"/>
<path d="M4513 3710 c7 -18 70 -90 140 -160 71 -69 126 -134 124 -143 -8 -33
71 -167 99 -167 17 0 24 -12 17 -30 -7 -16 -3 -30 8 -30 10 0 19 -10 19 -21 0
-12 -11 -16 -25 -9 -14 7 -7 -2 15 -20 22 -18 38 -42 35 -53 -4 -11 2 -15 11
-10 9 6 43 -3 75 -20 33 -17 90 -33 128 -36 87 -8 49 26 -119 105 l-110 52 80
17 c97 20 139 55 69 56 -123 1 -300 167 -196 183 35 5 6 34 -145 148 -227 171
-242 181 -225 138z"/>
<path d="M4260 3580 c0 -27 136 -92 223 -108 102 -18 117 21 19 47 -44 12
-116 35 -161 51 -44 15 -81 20 -81 10z"/>
<path d="M3782 3437 c3 -93 25 -163 54 -172 26 -9 30 89 6 174 -21 76 -62 75
-60 -2z"/>
<path d="M4247 3465 c88 -265 130 -327 107 -158 l-12 87 102 -10 c73 -7 98 -3
88 13 -8 13 -34 23 -58 23 -24 1 -83 19 -131 40 -107 49 -111 49 -96 5z"/>
<path d="M4080 3278 c0 -40 87 -158 116 -158 19 0 13 24 -20 84 -46 83 -96
122 -96 74z"/>
<path d="M3980 3269 c0 -27 107 -209 123 -209 29 0 18 46 -28 128 -40 71 -95
118 -95 81z"/>
<path d="M3940 2930 c0 -64 59 -210 84 -210 26 0 3 129 -36 204 -36 69 -48 71
-48 6z"/>
<path d="M4540 2914 c0 -42 73 -127 93 -108 19 19 -32 117 -68 129 -14 5 -25
-5 -25 -21z"/>
<path d="M4112 2864 c-17 -29 39 -164 69 -164 13 0 18 14 11 32 -7 17 -12 42
-12 56 0 42 -52 101 -68 76z"/>
<path d="M4200 2771 c0 -26 49 -111 63 -111 23 0 21 35 -4 81 -18 34 -59 55
-59 30z"/>
<path d="M3810 2658 c-19 -86 21 -124 50 -48 23 60 14 110 -18 110 -10 0 -25
-28 -32 -62z"/>
<path d="M4320 2703 c0 -26 80 -123 101 -123 35 0 19 53 -27 97 -49 45 -74 54
-74 26z"/>
<path d="M2843 2475 c-112 -353 -128 -595 -41 -595 20 0 69 -18 108 -40 127
-71 212 -21 207 123 l-2 87 -16 -70 c-10 -44 -15 27 -13 194 2 295 -9 336 -53
193 l-30 -97 -2 94 c-2 148 -52 129 -88 -34 -4 -22 -9 11 -11 74 -2 132 -30
165 -59 71z m7 -470 c-8 -55 -23 -85 -41 -85 -38 0 -37 50 6 280 l35 190 6
-150 c4 -82 1 -188 -6 -235z m106 96 c-8 -182 -26 -239 -61 -204 -14 14 -9 88
16 237 42 239 58 227 45 -33z m85 -208 c-11 -29 -29 -53 -41 -53 -28 0 -25 59
15 300 l35 210 6 -202 c3 -111 -4 -226 -15 -255z"/>
<path d="M4033 2367 c-16 -17 -17 -93 -1 -135 21 -54 48 -14 48 69 0 74 -16
96 -47 66z"/>
<path d="M2312 2277 c-17 -24 -25 -52 -19 -62 14 -23 87 42 87 78 0 41 -34 32
-68 -16z"/>
<path d="M2333 2187 c-20 -21 -16 -87 6 -87 18 0 61 63 61 89 0 15 -50 14 -67
-2z"/>
</g>
</svg>
`,

  //7 wireshark
  `<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="100" height="100" viewBox="0 0 50 50">
  <defs>
  <linearGradient id="gradient1" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset=0 style="stop-color:#9f2fff;stop-opacity:1" />
      <stop offset=1 style="stop-color:#0bb1d3;stop-opacity:1" />
    </linearGradient>
</defs>
<path style="fill:url(#gradient1);" d="M 25 2 C 12.32 2 2 12.32 2 25 C 2 37.68 12.32 48 25 48 C 37.68 48 48 37.68 48 25 C 48 20.932573 46.930587 17.115653 45.072266 13.796875 C 46.224023 11.190729 47.624672 8.7787591 49.099609 6.4023438 C 49.305609 6.0713438 49.299984 5.6492188 49.083984 5.3242188 C 48.869984 4.9992188 48.489609 4.8247187 48.099609 4.8867188 C 44.885514 5.3801582 41.909179 6.0693316 39.138672 6.8984375 C 35.233353 3.838492 30.328634 2 25 2 z M 25 4 C 29.37101 4 33.428823 5.3560189 36.791016 7.6503906 C 16.121034 14.755506 8.4142272 29.819577 7.0273438 32.892578 C 6.4016704 32.7678 5.8016635 32.531738 5.2617188 32.175781 C 4.4448142 29.935765 4 27.519222 4 25 C 4 13.42 13.42 4 25 4 z M 46.257812 7.2265625 C 42.201041 14.050812 39.045135 21.467007 40.685547 32.976562 C 38.830623 32.857866 37.174975 31.719126 36.416016 29.988281 C 36.257016 29.623281 35.897 29.388672 35.5 29.388672 C 35.103 29.388672 34.742984 29.624281 34.583984 29.988281 C 33.781984 31.817281 31.982 33 30 33 C 28.018 33 26.219016 31.817281 25.416016 29.988281 C 25.256016 29.623281 24.897 29.388672 24.5 29.388672 C 24.103 29.388672 23.742984 29.624281 23.583984 29.988281 C 22.780984 31.817281 20.982 33 19 33 C 17.018 33 15.219016 31.817281 14.416016 29.988281 C 14.256016 29.623281 13.897 29.388672 13.5 29.388672 C 13.103 29.388672 12.742984 29.624281 12.583984 29.988281 C 11.959282 31.411171 10.728763 32.434164 9.28125 32.822266 C 11.81358 27.830066 21.70764 11.802983 46.257812 7.2265625 z M 44.087891 16.255859 C 45.315876 18.917123 46 21.883135 46 25 C 46 26.964719 45.72367 28.865017 45.216797 30.669922 C 44.602156 31.636102 43.703036 32.337322 42.667969 32.705078 C 41.719413 26.039518 42.468256 20.800894 44.087891 16.255859 z M 13.5 32.320312 C 14.811 33.987312 16.827 35 19 35 C 21.173 35 23.189 33.987313 24.5 32.320312 C 25.811 33.987312 27.826 35 30 35 C 32.174 35 34.189 33.987313 35.5 32.320312 C 36.811 33.987312 38.826 35 41 35 C 41.959282 35 42.882482 34.800632 43.732422 34.439453 C 40.268432 41.285403 33.182965 46 25 46 C 16.961845 46 9.9737778 41.45618 6.4453125 34.806641 C 6.7521357 34.876828 7.063106 34.926955 7.3789062 34.955078 C 7.4607623 34.975943 7.5431134 35 7.625 35 C 7.6669705 35 7.7068088 34.985705 7.7480469 34.980469 C 7.8326113 34.983515 7.9150534 35 8 35 C 10.173 35 12.189 33.987313 13.5 32.320312 z"></path>
</svg>`,

  //8 math
  `<!-- icon666.com - MILLIONS OF FREE VECTOR ICONS --><svg id="_x33_0" enable-background="new 0 0 64 64" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="32" x2="32" y1="63" y2="1"><stop offset="0" stop-color="#9f2fff"/><stop offset="1" stop-color="#0bb1d3"/></linearGradient><path d="m39 19h-6v-6h4v-2h-4v-2h6v6h-4v2h4zm12-10h-6v2h4v2h-4v2h4v2h-4v2h6zm-24 0h-2v10h2zm36 34c0 2.206-1.794 4-4 4h-12.196l10.001 16h-8.359l-3.75-6h-17.392l-3.75 6h-8.359l10.001-16h-10.196v3.2l-4.692 11.262c-.391.934-1.296 1.538-2.308 1.538s-1.917-.604-2.308-1.537l-4.692-11.263v-42.2c0-3.86 3.141-7 7-7 2.785 0 5.188 1.639 6.315 4h46.685v34.556c1.19.694 2 1.97 2 3.444zm-48.08-36c.047.328.08.66.08 1v31h44v-32zm-9.753 48h5.667l1.667-4h-9zm7.833-42h-10v2h10zm-10 4v32h4v-32zm10 32v-32h-4v32zm-10-41v3h10v-3c0-2.757-2.243-5-5-5s-5 2.243-5 5zm7 49h-4l1.538 3.692c.156.373.768.374.924-.001zm21.196-10h-3.642l-8.749 14h3.641zm2.358 0-2.5 4h9.892l-2.5-4zm9.892 8-1.25-2h-12.392l-1.25 2zm1-8h-3.642l8.751 14h3.641zm16.554-4c0-1.103-.897-2-2-2h-44v4h44c1.103 0 2-.897 2-2zm-4-8h-2v2h2zm-4 2h-36v-24h2v14l7-5.25 8.134 6.1 16.866-7.379v14.529h2zm-4-13.471-6 2.625v8.846h6zm-22 11.471h6v-5.5l-6-4.5zm8 0h6v-7.971l-6 2.625zm-16 0h6v-10l-6 4.5zm0-26h-2v2h2z" fill="url(#SVGID_1_)"/>
  </svg>`


];


//코드 방식
const codeContainerIds = ['icon_code-1', "icon_code-2", "icon_code-3", "icon_code-4", "icon_code-5", "icon_code-6", "icon_code-7", "icon_code-8"];

// SVG 코드 삽입
codeContainerIds.forEach((id, index) => {
  const container = document.getElementById(id);
  if (container && index < svgCodes.length) {
    container.innerHTML = svgCodes[index]; // 코드 삽입    
  }
});


/* ============================================== Contents-Container============================================== */
//카테고리 별로 컨테이너를 로딩하는 기능
const contents = document.querySelector("#contents"), //content section으로 접근
  contentsList = contents.querySelectorAll(".content-item.padd-15");  //content-item들을 모두 선택
  
for (let i = 0; i < contentsList.length; i++) //item개수만큼 반복해서 항목을 생성한다.
{
  const a = contentsList[i].querySelector(".content-item-inner"); //각 item에서 하나 안으로 접근
  a.addEventListener("click", function(e) //클릭 이벤트를 설정
  {
    e.preventDefault(); // 기본 동작 방지
    if (this.classList.contains("active")) return; //this = a = 해당 item inner
    showContainer(this); //item들마다 각각 다른 container를 show.
  })

  
};

function showContainer(element)
{
  const contentId = element.getAttribute("data-target"); //contentId = javascript
  const contentsContainer = document.querySelector(`.contents-container#${contentId}`);
  contentsContainer.classList.add("active");  
};

function removeContainer()
{
  const contentsContainer = document.querySelector(".contents-container.active");
  if(contentsContainer == null)
  {
    return;
  }
  else
  {
    contentsContainer.classList.remove("active");
    closePost();
  }
}

/* ============================================== Category-inner-boxes ============================================== */
//카테고리 클릭 시, 포스트 아이템들을 박스로 만들어서 미리보기로 show

const categories = ['javascript', 'data-structure', 'ai', 'java', 'network', 'math', 'blog', 'minecraft', 'chinese', 'japanese', 'cpp'];

for (let i = 0; i < categories.length; i++){
  const category = categories[i];
  const parentElement = document.querySelector(`.contentsGroup .contents-container#${category} .row.items`);
  fetch(`json/contents/${category}/${category}.json`)
    .then(response => {
      if (!response.ok){
        console.log(`${category} 파일 없음`);
        return null;
      }
      return response.json();
    })
    .then(data=> {
      data.forEach((item) => {
        // 각 항목에 대한 새로운 div 요소 생성
      const newDiv = document.createElement("div");
      newDiv.classList.add("content-item", "padd-15");  // 항목에 해당하는 클래스 추가
      newDiv.dataset.fileName = item["file-name"];

      const innerDiv = document.createElement("div");
      innerDiv.classList.add("content-item-inner");

      const iconDiv = document.createElement("div");
      iconDiv.classList.add("icon");
      
      const svgIconDiv = document.createElement("img");
      svgIconDiv.src = (`images/contents-logo/${item["icon"]}`);
      svgIconDiv.classList.add("mysvg");
      iconDiv.appendChild(svgIconDiv);

      const titleElement = document.createElement("h4");
      titleElement.textContent = item.title;
      const contentsElement = document.createElement("p");
      contentsElement.textContent = item.date;

      //3개를 전부 content-item-inner에 append
      innerDiv.appendChild(iconDiv);
      innerDiv.appendChild(titleElement);
      innerDiv.appendChild(contentsElement);
      
      //content-item-inner을 content-item padd-15에 append
      newDiv.appendChild(innerDiv);

      // 완성된 newDiv를 부모 요소에 추가
      parentElement.appendChild(newDiv);
      })
    })
    .catch(error => console.error("Error loading JSON:", error));  // 에러 처리
    
}

/* ============================================== Post Contents============================================== */
//실제 포스트 내용을 show.
//이벤트 델리게이션
for (let i = 0; i < categories.length; i++){
  const category = categories[i];
  const postArea = document.querySelector(`.contentsGroup .contents-container#${category} .row.items`);

  postArea.addEventListener("click", function(e){
    if(e.target && (
      e.target.classList.contains("mysvg")
      || e.target.classList.contains("icon")
      || e.target.classList.contains("content-item-inner")
      || e.target.tagName === "H4"
      || e.target.tagName === "P"
      )
    ){
      const contentItem= e.target.closest(".content-item");
      const target_container = contentItem.closest(".contents-container");
      const target_category = target_container.id;
      
      if(contentItem) {
        const fileName = contentItem.dataset.fileName;
  
        
        showPost(fileName, target_category);
      }
    }
  })
}


function showPost(fileName, target_category)
{
  if(fileName){
    openPost();
    fetch(`json/contents/${target_category}/${fileName}`)
    .then(response => {
      if(!response.ok) {
        throw new Error("파일 없음");
      }
      return response.json();
    })
    .then(data => {
      
      loadPost(data,target_category);


      
    })
    .catch(error => {
      console.log("에러 발생:", error.message);
    })
  }
}

function loadPost(data, target_category)
{
  const postContainer = document.querySelector(`.postGroup .post-container`);
  const title = postContainer.querySelector(".section-title.padd-15 .a");
  const sub_Title = postContainer.querySelector(".post-subtitle.padd-15 .b");
  const content = postContainer.querySelector(".post-text.padd-15 .c");
  const buttonCat = postContainer.querySelector(".back-to-category-button .buttonCat");
/*
  const titleDiv = document.createElement("h2");
  titleDiv.textContent = data.title;
  
  const sub_titleDiv = document.createElement("h3");
  sub_titleDiv.textContent = data.subTitle;

  const textDiv = document.createElement("p");
  textDiv.textContent = data.content;

  title.appendChild(titleDiv);
  sub_Title.appendChild(sub_titleDiv);
  content.appendChild(textDiv);
*/
  title.textContent = data.title;
  sub_Title.textContent = data.subTitle;
  content.textContent = data.content;
  buttonCat.textContent = target_category;
  content.style.whiteSpace = "pre-line";
}



function openPost()
{
  const postContainer = document.querySelector(`.postGroup .post-container`)
  postContainer.classList.add("active");
}

function closePost()
{
  const postContainer = document.querySelector(".post-container.active");
  if(postContainer == null)
  {
    return;
  }
  else
  {
    postContainer.classList.remove("active");
  }
}

function removePost()
{
  closePost();
}




/*
const contentId = element.getAttribute("data-target"); //contentId = javascript
  const contentsContainer = document.querySelector(`.contents-container#${contentId}`);
  contentsContainer.classList.add("active"); */